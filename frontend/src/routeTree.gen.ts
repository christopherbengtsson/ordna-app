/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as InvitationRouteImport } from './routes/invitation'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedWaitingRoomGameIdRouteImport } from './routes/_authenticated/waiting-room.$gameId'
import { Route as AuthenticatedLobbyGameIdRouteImport } from './routes/_authenticated/lobby.$gameId'
import { Route as AuthenticatedGameGameIdRouteImport } from './routes/_authenticated/game.$gameId'
import { Route as AuthenticatedGameOverGameIdRouteImport } from './routes/_authenticated/game-over.$gameId'

const InvitationRoute = InvitationRouteImport.update({
  id: '/invitation',
  path: '/invitation',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedWaitingRoomGameIdRoute =
  AuthenticatedWaitingRoomGameIdRouteImport.update({
    id: '/waiting-room/$gameId',
    path: '/waiting-room/$gameId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedLobbyGameIdRoute =
  AuthenticatedLobbyGameIdRouteImport.update({
    id: '/lobby/$gameId',
    path: '/lobby/$gameId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedGameGameIdRoute = AuthenticatedGameGameIdRouteImport.update({
  id: '/game/$gameId',
  path: '/game/$gameId',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedGameOverGameIdRoute =
  AuthenticatedGameOverGameIdRouteImport.update({
    id: '/game-over/$gameId',
    path: '/game-over/$gameId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/invitation': typeof InvitationRoute
  '/': typeof AuthenticatedIndexRoute
  '/game-over/$gameId': typeof AuthenticatedGameOverGameIdRoute
  '/game/$gameId': typeof AuthenticatedGameGameIdRoute
  '/lobby/$gameId': typeof AuthenticatedLobbyGameIdRoute
  '/waiting-room/$gameId': typeof AuthenticatedWaitingRoomGameIdRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/invitation': typeof InvitationRoute
  '/': typeof AuthenticatedIndexRoute
  '/game-over/$gameId': typeof AuthenticatedGameOverGameIdRoute
  '/game/$gameId': typeof AuthenticatedGameGameIdRoute
  '/lobby/$gameId': typeof AuthenticatedLobbyGameIdRoute
  '/waiting-room/$gameId': typeof AuthenticatedWaitingRoomGameIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRoute
  '/invitation': typeof InvitationRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/game-over/$gameId': typeof AuthenticatedGameOverGameIdRoute
  '/_authenticated/game/$gameId': typeof AuthenticatedGameGameIdRoute
  '/_authenticated/lobby/$gameId': typeof AuthenticatedLobbyGameIdRoute
  '/_authenticated/waiting-room/$gameId': typeof AuthenticatedWaitingRoomGameIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/invitation'
    | '/'
    | '/game-over/$gameId'
    | '/game/$gameId'
    | '/lobby/$gameId'
    | '/waiting-room/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/invitation'
    | '/'
    | '/game-over/$gameId'
    | '/game/$gameId'
    | '/lobby/$gameId'
    | '/waiting-room/$gameId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/invitation'
    | '/_authenticated/'
    | '/_authenticated/game-over/$gameId'
    | '/_authenticated/game/$gameId'
    | '/_authenticated/lobby/$gameId'
    | '/_authenticated/waiting-room/$gameId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRoute
  InvitationRoute: typeof InvitationRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/invitation': {
      id: '/invitation'
      path: '/invitation'
      fullPath: '/invitation'
      preLoaderRoute: typeof InvitationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/waiting-room/$gameId': {
      id: '/_authenticated/waiting-room/$gameId'
      path: '/waiting-room/$gameId'
      fullPath: '/waiting-room/$gameId'
      preLoaderRoute: typeof AuthenticatedWaitingRoomGameIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/lobby/$gameId': {
      id: '/_authenticated/lobby/$gameId'
      path: '/lobby/$gameId'
      fullPath: '/lobby/$gameId'
      preLoaderRoute: typeof AuthenticatedLobbyGameIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/game/$gameId': {
      id: '/_authenticated/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof AuthenticatedGameGameIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/game-over/$gameId': {
      id: '/_authenticated/game-over/$gameId'
      path: '/game-over/$gameId'
      fullPath: '/game-over/$gameId'
      preLoaderRoute: typeof AuthenticatedGameOverGameIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedGameOverGameIdRoute: typeof AuthenticatedGameOverGameIdRoute
  AuthenticatedGameGameIdRoute: typeof AuthenticatedGameGameIdRoute
  AuthenticatedLobbyGameIdRoute: typeof AuthenticatedLobbyGameIdRoute
  AuthenticatedWaitingRoomGameIdRoute: typeof AuthenticatedWaitingRoomGameIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedGameOverGameIdRoute: AuthenticatedGameOverGameIdRoute,
  AuthenticatedGameGameIdRoute: AuthenticatedGameGameIdRoute,
  AuthenticatedLobbyGameIdRoute: AuthenticatedLobbyGameIdRoute,
  AuthenticatedWaitingRoomGameIdRoute: AuthenticatedWaitingRoomGameIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRoute,
  InvitationRoute: InvitationRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
